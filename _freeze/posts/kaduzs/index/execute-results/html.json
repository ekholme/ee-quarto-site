{
  "hash": "83fd8142d3fe0c8e6e7e8b567e9f4dab",
  "result": {
    "markdown": "---\ntitle: \"Kaduzs!\"\ndescription: |\n  Analyzing data from the 2023 Crossfit Games\ndate: 2023-08-07\nformat:\n  html:\n    code-fold: true\n    fig-height: 7\n    fig-width: 8\nexecute: \n  warning: false\ncategories: [R, Crossfit, EDA]\npreview: img/horvath_adler.jpg\n---\n\n\nWhat an amazing Crossfit Games we just had! Other venues have documented all of the storylines leading into the games better than I could, so I'm not going to recap those here. But suffice to say that there was a lot of hype going into the Games, and they lived up to all of that hype and then some.\n\nThe point of this blog post is to prolong the Games-weekend high by digging into the available data a little bit and exploring how the weekend shook out. If you're into [R](https://www.r-project.org/) and want to use this data yourself, check out my (work-in-progress) [`{crossfitgames}`](https://github.com/ekholme/crossfitgames) package, which will help you retrieve and process data from the Crossfit API.\n\nBy default, the code in this post is folded up (you can click to expand it), and I won't necessarily explain what it does. But again, if you're into that sort of thing, you can view it.\n\nSo let's get into the data.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(crossfitgames)\nlibrary(harrypotter) # for colors\nlibrary(tidyverse)\nlibrary(hrbrthemes)\nlibrary(gt)\n\ntheme_set(theme_ipsum_rc())\n\noptions(\n    ggplot2.discrete.fill = list(\n        hp(n = 2, option = \"HermioneGranger\")\n    ),\n    ggplot2.discrete.color = list(\n        hp(n = 2, option = \"HermioneGranger\")\n    )\n)\n\n# get men's data\nmen_23 <- games_leaderboard(2023, division = \"men\")\n\n# get women's data\nwomen_23 <- games_leaderboard(2023, division = \"women\")\n\n# use extractor functions to get final leaderboard and by-workout results\nmen_lb <- extract_final_leaderboard(men_23) |>\n    mutate(division = \"Men\")\n\nwomen_lb <- extract_final_leaderboard(women_23) |>\n    mutate(division = \"Women\")\n\n# by workout results\nmen_workout_df <- extract_workout_results(men_23) |>\n    mutate(division = \"Men\")\n\nwomen_workout_df <- extract_workout_results(women_23) |>\n    mutate(division = \"Women\")\n\n# combining men and women dfs\nlb_df <- bind_rows(men_lb, women_lb)\n\nworkout_df <- bind_rows(men_workout_df, women_workout_df)\n```\n:::\n\n\n# Overall Points\n\nThis isn't the most exciting graph, but it makes sense to start by looking at the overall points. If you followed the Games coverage over the weekend, though, you probably know all of this already.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlb_df |>\n    filter(rank <= 20, rank > 0) |>\n    ggplot(aes(x = score, y = fct_reorder(athlete, score), fill = division)) +\n    geom_col() +\n    geom_text(aes(label = score, x = score - 10), hjust = 1, color = \"white\") +\n    facet_wrap(vars(division), scales = \"free_y\") +\n    labs(\n        x = \"Total Points\",\n        y = NULL,\n        title = \"Total Points by Athlete, 2023 CFG\",\n        subtitle = \"Only top 20 included\"\n    ) +\n    theme(\n        legend.position = \"none\"\n    )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-1.png){width=768}\n:::\n:::\n\n\nOne thing that sticks out to me when looking at this is how close places 4-6 were to one another on both the men and the women's sides. Only 17 points separated Gabi Migala from Alexis Raptis, and only 10 points separated Brent Fikowski from Jonne Koski.\n\n# Number of Top 3 Finishes\n\nNext, let's take a look at the number of top 3 finishes by all of our athletes. To preserve some space, I'm only going to include those athletes with multiple top 3 finishes.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nworkout_df |>\n    filter(workout_place <= 3) |>\n    count(division, athlete) |>\n    filter(n > 1) |>\n    ggplot(aes(x = n, y = fct_reorder(athlete, n), fill = division)) +\n    geom_col() +\n    geom_text(aes(label = n, x = n - .1), hjust = 1, color = \"white\") +\n    labs(\n        y = NULL,\n        x = \"Number of Top 3 Finishes\",\n        title = \"Number of Top 3 Finishes by Athlete\",\n        subtitle = \"Only athletes with multiple top 3 finishes shown\"\n    ) +\n    theme(\n        legend.position = \"none\"\n    )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-1.png){width=768}\n:::\n:::\n\n\nSo there are a few things that stand out to me here:\n\n- Laura absolutely crushed it. She had 6 total top 3 finishes (5 of which were wins), which was 2 more than the next-closest person.\n- Emma Lawson, even though she ended up in 2nd and led for a decent amount of the competition, only had 2 top 3 finishes.\n- Justin Medeiros still had 3 top 3 finishes, despite placing 13th overall, which just goes to show how damaging a few *very bad* finishes can be.\n\n# Event Placement Variability\n\nMedeiros's performance provides a nice segue into the next thing we'll look at -- variability. That is, to what extent were athletes consistent in their finishes. The plot below shows athletes *average* event placement as a point, and it shows the standard error of this estimate (the variability) as bars extending around the point. The wider the bars, the more variable (less consistent) the athlete was in their finishes.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntop_20_athletes <- lb_df |>\n    filter(rank <= 20, rank > 0) |>\n    pull(athlete)\n\nworkout_df |>\n    filter(athlete %in% top_20_athletes) |>\n    group_by(division, athlete) |>\n    summarize(\n        std_err = sd(workout_place) / sqrt(12),\n        avg = mean(workout_place)\n    ) |>\n    ungroup() |>\n    left_join(select(lb_df, athlete, rank)) |>\n    ggplot(aes(x = avg, y = fct_reorder(athlete, -rank), color = division)) +\n    geom_point() +\n    geom_errorbarh(aes(xmin = avg - std_err, xmax = avg + std_err), height = 0) +\n    facet_wrap(vars(division), scales = \"free_y\") +\n    labs(\n        x = \"Avg Event Placement\",\n        y = NULL,\n        title = \"Average Event Placement and Variability\",\n        subtitle = \"Top 20 Athletes Only\"\n    ) +\n    scale_color_hp_d(\"HermioneGranger\") +\n    theme(\n        panel.grid.major.y = element_blank(),\n        legend.position = \"none\"\n    )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=768}\n:::\n:::\n\n\nOne thing to note here is that the y-axes are sorted by final leaderboard position, whereas the position of the point on the x-axis for each athlete is the average event finish. If all events are weighted equally, these would points cascade downward and outward -- the average event placement would increase as you go down the leaderboard. But since the point gaps between places increase as athletes are cut, it's possible for athletes to have higher average event finishes and yet still finish better on the leaderboard. This is the case for athletes who do better on Saturday and Sunday than they did on Thursday and Friday. We can see this with Gabi Migala and Pat Vellner. Inversely, athletes who do worse on Saturday and Sunday will have lower average event finishes relative to their overall place. We can see this with Chandler Smith and Roman Khrennikov (who didn't do well on Sunday for obvious reasons).\n\nBeyond that, though, it's interesting to look at the width of some of these error bars. On the women's side, we can see how narrow Emma Lawson's bars were, showing that she consistently finished around 7th place in events. Likewise for Chandler Smith on the men's side -- he seems much more consistent than many of the other top 20, and I'm not sure anyone would say consistency was Chandler's vibe before this year. It's also probably worth mentioning that Roman's performance would (probably) have been much more consistent had he not broken his foot.\n\nInversely, we can see that some athletes were very inconsistent. For instance, Justin Medeiros, Pat Vellner, and Sam Kwant on the men's side, and Katrin, Emma Cary, and Olivia Kerstetter on the women's side. This all makes sense -- Justin, Pat, and Sam all had a few terribly events, but as we saw earlier they were also top 3 in multiple events. Likewise for Katrin, Olivia, and Emma.\n\n# Top 10 Athlete Finishes by Event\n\nThe error bars in the above plot tell us something about variability, but we might want to look at the actual event finishes to unpack this variability a bit more. The plot below is a jitter plot, which is basically just a scatter plot with the points jittered a little so they don't overlap. Since this might be too busy otherwise, I'm going to drop down to just the top 10 athletes in each division here.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntop_10_athletes <- lb_df |>\n    filter(rank <= 10, rank > 0) |>\n    pull(athlete)\n\nworkout_df |>\n    filter(athlete %in% top_10_athletes) |>\n    left_join(select(lb_df, athlete, rank)) |>\n    ggplot(aes(x = workout_place, y = fct_reorder(athlete, -rank), color = rank %% 2 == 0)) +\n    geom_jitter(width = 0, height = .15, alpha = .6) +\n    facet_wrap(vars(division), scales = \"free_y\") +\n    labs(\n        x = \"Workout Place\",\n        y = NULL,\n        title = \"Variability in Workout Placement\",\n        subtitle = \"Top 10 athletes per division\"\n    ) +\n    scale_color_hp_d(\"HermioneGranger\") +\n    theme(\n        panel.grid.major.y = element_blank(),\n        legend.position = \"none\"\n    )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=768}\n:::\n:::\n\n\nRight, so here we can get a better sense of athletes by performances. We can see, for example, that both Katrin and Emma Cary *mostly* did well, but they had a few events where they bombed. Same thing with Vellner (and probably Medeiros too, if he were displayed here). Jelle Hoste's finishes appear much more smoothly spread -- it's not like he vacillated between dominating events and bombing them. He won 1 (the 5k), finished a few others in the top 10, finished a few others in the top 20, and then had a handful of worse finishes. We see a similar pattern for Fikowski, Paige Powers, Gabi Migala, and Danielle Brandon.\n\n# Placement for Top 5 Athletes Across the Competition\n\nAs a penultimate glance at the data, let's track the overall placement of the eventual top 5 finishers across the competition. I'm going to color the eventual winners in gold and the others in gray, which will make the winners' trajectories easier to follow and make the graph less busy (although it does make it slightly harder to follow the non-winners' trajectories).\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntop_5_athletes <- lb_df |>\n    filter(rank <= 5, rank > 0) |>\n    pull(athlete)\n\nathlete_cumul <- workout_df |>\n  filter(athlete != \"Jason Smith\")  |> \n  group_by(athlete) |> \n  mutate(\n    cum_pts = cumsum(points)\n  ) |> \n  ungroup() |> \n  group_by(workout_num, division) |> \n  arrange(desc(cum_pts), .by_group = TRUE) |> \n  mutate(cum_rank = row_number()) \n\ntop_5_cumul <- athlete_cumul |> \n  ungroup() |> \n  filter(athlete %in% top_5_athletes) |> \n  left_join(select(lb_df, athlete, final_rank = rank))\n\ntop_5_cumul |> \n    ggplot(aes(x = workout_num, y = cum_rank, color = final_rank == 1, group = athlete)) +\n    geom_line() +\n    geom_point(aes(size = final_rank == 1)) +\n    geom_text(\n        aes(\n            label = str_replace_all(athlete, \"^(.*) (.*)$\", \"\\\\2\"),\n            y = final_rank,\n            x = 12.5\n        ),\n        hjust = 0\n    ) +\n    facet_wrap(vars(division)) +\n    scale_x_continuous(limits = c(0, 16), breaks = seq(2, 12, by = 2)) +\n    labs(\n        x = \"Workout Number\",\n        y = \"Place after Workout\",\n        title = \"Placement of the Top 5 Athletes over the Competition\"\n    ) +\n    scale_color_manual(values = c(\"grey50\", \"#e59950ff\")) +\n    scale_size_manual(values = c(1, 3)) +\n    scale_y_reverse() +\n    theme(\n        legend.position = \"none\",\n        panel.grid.minor.x = element_blank()\n    )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=768}\n:::\n:::\n\n\nThe first thing that stands out to me is what we all know -- Roman dominated most of the men's competition, and it was a real bummer that he broke his foot. Another thing that stands out to me is that Dallin Pepper made a huge late charge to go from ~14th after event 7 up to 5th at the end of Sunday, which is a lot of ground to make up in 5 events. We can also see Vellner doing Vellner things -- pulling himself out of an early hole to eventually take 2nd.\n\nOn the women's side, we can see that Emma Lawson was basically always at or near the top. Laura had a bit of a roller-coaster ride to get back to the top spot, but she ended up there when it mattered. The other thing on the women's side that jumps out is that Gabi Migala had sort of a similar trajectory as Dallin Pepper -- she dug herself into a bit of a hole over the first half of the competition that she climbed out of by the end.\n\n\n# Exploring Laura's Event Wins\n\nAnd let's end with a little bit about Laura Horvath. I've been a huge Laura fan since 2018, and I'm so happy for her that she finally got a W this year. I hope this is just the first of many for her, and I truly think she's a great ambassador for the sport.\n\nAll of that said, one of the things you couldn't help but notice when watching her was how dominant her event wins were. The table below shows her score for each of her event wins as well as the score of the woman who finished in 2nd.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlh_wins <- c(2, 5, 9:11)\n\nlh_win_workouts <- workout_df |> \n  filter(\n    workout_num %in% lh_wins,\n    workout_place <= 2,\n    division == \"Women\"\n    ) \n\ncomparison_tbl <- lh_win_workouts |> \n  select(-c(\"workout_place\", \"points\", \"division\"))\n\nlh_tbl <- comparison_tbl |> \n  filter(athlete == \"Laura Horvath\") |> \n  rename(lh_score = score)\n\nother_tbl <- comparison_tbl |> \n  filter(athlete != \"Laura Horvath\") |> \n  rename(other_athlete = athlete, other_score = score)\n\ncomp_tbl <- lh_tbl |> \n  left_join(other_tbl, by = \"workout_num\") |> \n  select(-athlete)\n\ncomp_tbl |> \n  gt() |> \n  cols_label(\n    workout_num = \"Workout #\",\n    lh_score = \"Laura Score\",\n    other_athlete = \"2nd Place Finisher\",\n    other_score = \"2nd Place Score\"\n  ) |> \n  tab_style(\n    style = list(\n        cell_text(weight = \"bold\")\n    ),\n    locations = cells_column_labels()\n  ) |> \n  tab_header(\n    title = \"Margin of Victory for Laura's Workout Wins\"\n  )\n```\n\n::: {.cell-output-display}\n```{=html}\n<div id=\"fxsgsiznlx\" style=\"overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>html {\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;\n}\n\n#fxsgsiznlx .gt_table {\n  display: table;\n  border-collapse: collapse;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#fxsgsiznlx .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#fxsgsiznlx .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#fxsgsiznlx .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 0;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#fxsgsiznlx .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#fxsgsiznlx .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#fxsgsiznlx .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#fxsgsiznlx .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#fxsgsiznlx .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#fxsgsiznlx .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#fxsgsiznlx .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#fxsgsiznlx .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#fxsgsiznlx .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#fxsgsiznlx .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#fxsgsiznlx .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#fxsgsiznlx .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#fxsgsiznlx .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#fxsgsiznlx .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#fxsgsiznlx .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#fxsgsiznlx .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#fxsgsiznlx .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#fxsgsiznlx .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#fxsgsiznlx .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#fxsgsiznlx .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#fxsgsiznlx .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#fxsgsiznlx .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#fxsgsiznlx .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#fxsgsiznlx .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#fxsgsiznlx .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-left: 4px;\n  padding-right: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#fxsgsiznlx .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#fxsgsiznlx .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#fxsgsiznlx .gt_left {\n  text-align: left;\n}\n\n#fxsgsiznlx .gt_center {\n  text-align: center;\n}\n\n#fxsgsiznlx .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#fxsgsiznlx .gt_font_normal {\n  font-weight: normal;\n}\n\n#fxsgsiznlx .gt_font_bold {\n  font-weight: bold;\n}\n\n#fxsgsiznlx .gt_font_italic {\n  font-style: italic;\n}\n\n#fxsgsiznlx .gt_super {\n  font-size: 65%;\n}\n\n#fxsgsiznlx .gt_two_val_uncert {\n  display: inline-block;\n  line-height: 1em;\n  text-align: right;\n  font-size: 60%;\n  vertical-align: -0.25em;\n  margin-left: 0.1em;\n}\n\n#fxsgsiznlx .gt_footnote_marks {\n  font-style: italic;\n  font-weight: normal;\n  font-size: 75%;\n  vertical-align: 0.4em;\n}\n\n#fxsgsiznlx .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#fxsgsiznlx .gt_slash_mark {\n  font-size: 0.7em;\n  line-height: 0.7em;\n  vertical-align: 0.15em;\n}\n\n#fxsgsiznlx .gt_fraction_numerator {\n  font-size: 0.6em;\n  line-height: 0.6em;\n  vertical-align: 0.45em;\n}\n\n#fxsgsiznlx .gt_fraction_denominator {\n  font-size: 0.6em;\n  line-height: 0.6em;\n  vertical-align: -0.05em;\n}\n</style>\n<table class=\"gt_table\">\n  <thead class=\"gt_header\">\n    <tr>\n      <th colspan=\"4\" class=\"gt_heading gt_title gt_font_normal gt_bottom_border\" style>Margin of Victory for Laura's Workout Wins</th>\n    </tr>\n    \n  </thead>\n  <thead class=\"gt_col_headings\">\n    <tr>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" style=\"font-weight: bold;\">Workout #</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" style=\"font-weight: bold;\">Laura Score</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" style=\"font-weight: bold;\">2nd Place Finisher</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" style=\"font-weight: bold;\">2nd Place Score</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td class=\"gt_row gt_right\">2</td>\n<td class=\"gt_row gt_left\">13:50.40</td>\n<td class=\"gt_row gt_left\">Arielle Loewen</td>\n<td class=\"gt_row gt_left\">14:43.54</td></tr>\n    <tr><td class=\"gt_row gt_right\">5</td>\n<td class=\"gt_row gt_left\">04:36.18</td>\n<td class=\"gt_row gt_left\">Alex Gazan</td>\n<td class=\"gt_row gt_left\">05:50.32</td></tr>\n    <tr><td class=\"gt_row gt_right\">9</td>\n<td class=\"gt_row gt_left\">470 lb</td>\n<td class=\"gt_row gt_left\">Christine Kolenbrander</td>\n<td class=\"gt_row gt_left\">447 lb</td></tr>\n    <tr><td class=\"gt_row gt_right\">10</td>\n<td class=\"gt_row gt_left\">08:41.22</td>\n<td class=\"gt_row gt_left\">Alex Gazan</td>\n<td class=\"gt_row gt_left\">08:59.04</td></tr>\n    <tr><td class=\"gt_row gt_right\">11</td>\n<td class=\"gt_row gt_left\">08:36.46</td>\n<td class=\"gt_row gt_left\">Danielle Brandon</td>\n<td class=\"gt_row gt_left\">08:48.42</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n:::\n:::\n\n\nThe first 2 wins are absolutely nutzo. Winning by nearly a minute in a ~14 minute event is crazy enough, but then *winning by over a minute in a 5 minute event* is bonkers. Her next 3 wins don't quite reach those same levels of insanity, but none of them are particularly close. In a lifting even where 1-5 lbs separated many athletes, Laura won by 23 lbs. And in events 10 and 11, she still won by 18 and 12 seconds, which is a lot (go ahead and count to 12 slowly and see how long it feels).\n\nAll in all, I'm pumped for Laura, pumped for Adler (who I didn't write much about here, but he does seem like a good dude), and pumped for another great Games weekend.\n\nI may dig into some other aspects of this data more in the future -- who knows -- but for now this is it.",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}